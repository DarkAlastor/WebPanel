name: CI Pipeline

on:
  push:
    branches:
      - dev   # Запуск на push в ветку dev
  pull_request:
    branches:
      - main  # Запуск на pull request в ветку main
jobs:

  lint:
    runs-on: ubuntu-latest
    name: Linting and Type Checking
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          if ! command -v poetry > /dev/null; then
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          fi

      - name: Install dependencies
        run: make install

      - name: Run formatters
        run: make formater

      - name: Run linters
        run: make lint

      - name: Run type checks
        run: make typecheck

  tests:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          if ! command -v poetry > /dev/null; then
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          fi

      - name: Install dependencies
        run: make install

      - name: Run tests
        run: make test-all

  docs:
    runs-on: ubuntu-latest
    name: Generate and Deploy Documentation
    needs: tests
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        run: |
          if ! command -v poetry > /dev/null; then
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          fi

      - name: Install dependencies
        run: make install

      - name: Generate documentation
        run: |
          make apidoc
          make docs

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: documentation
          path: docs/_build/html

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html