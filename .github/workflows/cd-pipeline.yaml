name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:

  docs:
    runs-on: ubuntu-latest
    name: Deploy Documentation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Upload pre-built documentation
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: docs/_build/html/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN_PAGES }}
          publish_dir: docs/_build/html

#  docker:
#    runs-on: ubuntu-latest
#    name: Build and Push Docker Image
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Cache Poetry
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pypoetry
#          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
#          restore-keys: ${{ runner.os }}-poetry-
#
#      - name: Install Poetry
#        run: |
#          if ! command -v poetry > /dev/null; then
#            curl -sSL https://install.python-poetry.org | python3 -
#            echo "$HOME/.local/bin" >> $GITHUB_PATH
#          fi
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.MY_GITHUB_TOKEN }}
#
#      - name: Build Docker Image (dev)
#        run: make build-dev
#
#      - name: Tag Docker Image
#        run: |
#          docker tag flask-web-panel:dev ghcr.io/darkalastor/webpanel:dev
#
#      - name: Push Docker Image to GHCR
#        run: |
#          docker push ghcr.io/darkalastor/webpanel:dev