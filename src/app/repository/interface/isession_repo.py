from typing import Optional, Protocol


class ISessionManager(Protocol):
    """
    Интерфейс для менеджера сессий.

    Этот интерфейс определяет методы для работы с сессиями. Классы, реализующие этот интерфейс,
    должны предоставлять функциональность для сохранения, получения и проверки наличия данных в сессии.

    Методы:
    - set(key: str, value: str) -> None: Метод для сохранения значения в сессии по указанному ключу.
    - get(key: str) -> str: Метод для получения значения из сессии по указанному ключу.
    - exists(key: str) -> bool: Метод для проверки, существует ли значение в сессии по указанному ключу.
    """

    def set(self, key: str, value: str) -> None:
        """
        Сохраняет значение в сессии по указанному ключу.

        :param key: Ключ для сохранения данных в сессии.
        :param value: Значение для сохранения в сессии.
        """
        pass

    def get(self, key: str) -> Optional[str]:
        """
        Получает значение из сессии по указанному ключу.

        :param key: Ключ для получения данных из сессии.
        :return: Значение, соответствующее ключу в сессии.
        """
        pass

    def exists(self, key: str) -> bool:
        """
        Проверяет, существует ли значение в сессии по указанному ключу.

        :param key: Ключ для проверки наличия данных в сессии.
        :return: True, если данные с указанным ключом существуют в сессии, иначе False.
        """
        pass
